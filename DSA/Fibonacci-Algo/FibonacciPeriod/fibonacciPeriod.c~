#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <math.h>

int first, last;
int N[1000000],l = 1000000;

int (*MM(int A[][2], int B[][2]))[2]{  
	
	int r,s,t,u;
	static int C[2][2]; 
	
	r = (A[0][0] * B[0][0] + A[0][1] * B[1][0])%100;
	s = (A[0][0] * B[0][1] + A[0][1] * B[1][1])%100;
	t = (A[1][0] * B[0][0] + A[1][1] * B[1][0])%100;
	u = (A[1][0] * B[0][1] + A[1][1] * B[1][1])%100;
	
	C[0][0] = r;
	C[0][1] = s;
	C[1][0] = t;
	C[1][1] = u;		
	
	return C;
}

void divideby2(int *N){ // integer array passed
	int i =  first;
	int j = last, temp = 0, t;
	while(i <= j)
	{
		t = N[i];
		if(((temp*10 + t) / 2) == 0){
			if( i ==  first)
				first++;	
			temp = t % 2;	
			N[i] = 0;
		} 
		else{
			N[i] = (temp*10 + t) / 2;
			temp = (temp*10 + t) % 2; 
						
		}
		i++;				
	}	
}

int power(int A[][2], int N){ 
	int  Y[2][2] = {{1,0},{0,1}};
	int  (*y)[2],(*x)[2];
	x = A;
	y = Y;
	while(N > 0) 
	{
		if((N%2) != 0)
			y= MM(y,x);
		x = MM(x,x);
		N=N/2;
	}
	return y[1][0];
}

int main()
{
	FILE *fp;
	fp = fopen("input","r");
	int i, temp[601] = {0}, p=0, fib=0;
	for(i = 0; i < l; i++)
	{
		fscanf(fp,"%1d",&N[i]);
	}

	first = 0;
	last = l - 1;

	int A[2][2] = {{1,1},{1,0}};
	int (*a)[2];
	a = A;

//600 because it will repeat before 6*modulus number
	for(i =0 ;i < 600; i++){
		temp[i] = power(a,i);
	}

//check for consecutive 0 and 1
	for(i =0 ;i < 600; i++){
		if ((temp[i] == 0) && (temp[i+1] == 1)){
			p=i;
			break;		
		}
	}
//logic for N%p 
	int rem = 0;
	for (i=0; i<1000000; i++)
		rem = (N[i] + (10*rem) % p );

	printf("%d", temp[rem]);
}
